package main

import (
	"fmt"
	"io/ioutil"
	"net/http"
	"net/url"
	"strings"
)

func main() {
	fmt.Println("helloooo")
	getEmailInfo(email)
	login(email, password, domain)
}

func getEmailInfo(email string) {

	emailEncoded := url.QueryEscape(email)
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	body := strings.NewReader(`login=` + emailEncoded)
	req, err := http.NewRequest("POST", "https://login.microsoftonline.com/GetUserRealm.srf", body)
	if err != nil {
		// handle err
		panic(err)
	}
	req.Host = "login.microsoftonline.com"
	req.Header.Set("Accept", "application/json")
	req.Header.Set("Connection", "close")
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		panic(err)
		// handle err
	}
	defer resp.Body.Close()

}

func login(email, password, domain string) {

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

	body := strings.NewReader(`
		<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
			<s:Header>
				<a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue</a:Action>
				<a:ReplyTo>
					<a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
				</a:ReplyTo>
				<a:To s:mustUnderstand="1">https://login.microsoftonline.com/extSTS.srf</a:To>
				<o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
					<o:UsernameToken>
						<o:Username>` + email + `</o:Username>
						<o:Password>` + password + `</o:Password>
					</o:UsernameToken>
				</o:Security>
			</s:Header>
			<s:Body>
				<t:RequestSecurityToken xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust">
					<wsp:AppliesTo xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy">
						<a:EndpointReference>
							<a:Address>https://` + domain + `/_forms/default.aspx?wa=wsignin1.0</a:Address>
						</a:EndpointReference>
					</wsp:AppliesTo>
					<t:KeyType>http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey</t:KeyType>
					<t:RequestType>http://schemas.xmlsoap.org/ws/2005/02/trust/Issue</t:RequestType>
					<t:TokenType>urn:oasis:names:tc:SAML:1.0:assertion</t:TokenType>
				</t:RequestSecurityToken>
			</s:Body>
		</s:Envelope>
	`)
	req, err := http.NewRequest("POST", "https://login.microsoftonline.com/extSTS.srf", body)
	if err != nil {
		// handle err
	}
	req.Host = "login.microsoftonline.com"
	req.Header.Set("Connection", "close")
	req.Header.Set("Content-Type", "application/soap+xml; charset=utf-8")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
	}
	defer resp.Body.Close()

	bodyBytes, err := ioutil.ReadAll(resp.Body)
	fmt.Println(string(bodyBytes))
	fmt.Println(resp.Header)
}
